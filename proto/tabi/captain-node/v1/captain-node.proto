syntax = "proto3";
package tabi.captain_node.v1;

import "gogoproto/gogo.proto";

option go_package = "github.com/tabilabs/tabi/x/captain-node/types";

// Params defines captain-node module's parameters
message Params {
    // total_count_captains defines the total count of the captains
    uint64 total_count_captains = 1;

    // minimum_power_on_period defines the minimum period for a captain to be powered on
    uint64 minimum_power_on_period = 2;

    // maximum_power_on_period defines the maximum period for a captain to be powered on
    uint64 maximum_power_on_period = 3;

    // constant_a defines the constant a for the captain can get the reward from the network
    uint64 constant_a = 4;

    // current_level_for_sale defines the current level for sale
    uint64 current_level_for_sale = 5;

    // maximum_number_of_holdings defines the maximum number of holdings for a captain
    uint64 maximum_number_of_holdings = 6;

    // halving_era defines the halving era
    uint64 halving_era = 7;

    // authorized caller list
    repeated string callers = 8;
}

// Rank defines the node class
message Division {
    string id = 1;
    // level defines the level of the node
    uint64 level = 2;
    // total_count defines the total count of the node
    uint64 total_count = 3;
    // low_computing_power defines the low computing power of the node
    uint64 low_computing_power = 4;
    // high_computing_power defines the high computing power of the node
    uint64 high_computing_power = 5;
}

// Node defines the node
message Node {
    string id = 1;
    string division_id = 2;
    string owner = 3;
    uint64 computing_power = 4;
}

// ExtractableComputingPower defines the extractable computing power
message ExtractableComputingPower {
   string owner = 1;
   uint64 amount = 2;
}
